#!groovy

/* A Jenkins "Declarative" Pipeline file.
See http://130.56.252.251:32779
*/

pipeline {
  
  // define the docker environment to run the pipeline in.
  agent {
      docker { 
        image 'underworldcode/uwgeodynamics:dev'
        
        // special label to jenkins config. See http://130.56.252.251:32779/computer/
        label 'uwgeo-hector'
      }
  }

  stages {

    // Build stage: compile the code
    stage('Build') {
      steps {
          withEnv(["HOME=${env.WORKSPACE}"]) {
              sh 'pip3 install --user pytest'
	      sh "pip3 install . --user" 
	      sh "cp .local/lib/python*/site-packages/UWGeodynamics/version.py UWGeodynamics/." 
        }
      }
    }
    
    
    // Test stage: runs the basic tests
    stage('Test') {
      steps {
          withEnv(["HOME=${env.WORKSPACE}"]) {
	      sh 'python -m pytest -v'
	  }
      }
    }
      
  }
  
  /* For post build analysis */
  post {
    failure {
      // notify users when the Pipeline fails
      emailext (
          subject: "Failed Pipeline: ${currentBuild.fullDisplayName}",
          body: "Something is wrong with ${env.BUILD_URL}",
          // mimeType: 'text/html',
          to: 'rbeucher@unimelb.edu.au'
        )
    }
    success {
      script {
        if (currentBuild.previousBuild != null && currentBuild.previousBuild.result != 'SUCCESS') {
          emailext (
            subject: "Back to normal: ${currentBuild.fullDisplayName}",
            body: "Project is back to normal",
            // mimeType: 'text/html',
            to: 'rbeucher@unimelb.edu.au'
          )
        }
      }
    }
  }
}
